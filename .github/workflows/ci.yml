name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ${{secrets.AWS_REGION}}
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  AWS_EKS_CLUSTER_NAME: ${{ secrets.AWS_EKS_CLUSTER_NAME }}
  HELM_VALUES_FILE_PATH: ${{ secrets.HELM_VALUES_FILE_PATH }}
  HELM_RELEASE_NAME: ${{ secrets.HELM_RELEASE_NAME }}

jobs:
  Validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.0

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

  Deploy:
    runs-on: ubuntu-latest
    needs: [Validate]
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        environment: [development, production]
    environment: ${{matrix.environment}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.0

      - name: Initialise Terraform
        run: terraform init -backend-config=./tfvars/backend.${{matrix.environment}}.tfvars

      - name: Validate Terraform
        run: terraform validate

      - name: Plan Terraform
        run: terraform plan -var-file=./tfvars/terraform.tfvars -var-file=./tfvars/terraform.${{matrix.environment}}.tfvars -backend-config=./tfvars/backend.${{matrix.environment}}.tfvars

      - name: Apply Terraform
        run: terraform apply -auto-approve -var-file=./tfvars/terraform.tfvars -var-file=./tfvars/terraform.${{matrix.environment}}.tfvars -backend-config=./tfvars/backend.${{matrix.environment}}.tfvars
      
